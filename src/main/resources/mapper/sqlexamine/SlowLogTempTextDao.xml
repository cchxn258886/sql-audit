<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.sqlexamine.entity.dao.SlowLogTempTextDao">

    <!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="com.example.sqlexamine.entity.po.SlowLogTempTextEntity" id="hostInfoMap">
        <result property="id" column="id"/>
        <result property="sqlTextHash" column="sql_text_hash"/>
        <result property="sqlText" column="sql_text"/>
        <result property="createTime" column="create_time"/>
    </resultMap>
    <select id="getById" resultType="com.example.sqlexamine.entity.dto.HostInfoDto">
        select uuid,inet_ntoa(ip) as ip ,username,host_password,host_desc,create_time,update_time,cloud_host_Info
        from host_info where uuid = #{uuid};
    </select>

    <insert id="insertList" parameterType="java.util.List">
        insert into slow_log_temp_text(id,sql_text_hash,sql_text,create_time) values
            <foreach collection="list" item="item" index="index" separator=",">
               (
                #{item.id},#{item.sqlTextHash},
                #{item.sqlText},#{item.createTime})
            </foreach>
    </insert>


    <select id="getSlowLogInfo" resultType="com.example.sqlexamine.entity.dto.SlowLogInfoDto">
        select t1.max_exec_time,t1.db_name,sltt.sql_text from (select max_exec_time ,db_name,sql_text_hash from slow_log_template where slow_log_template.create_time between #{startTime} and #{endTime}
                                                                              ) t1 left join slow_log_temp_text sltt on sltt.sql_text_hash=t1.sql_text_hash where sltt.crate_time between #{startTime} and #{endTime};
    </select>
</mapper>